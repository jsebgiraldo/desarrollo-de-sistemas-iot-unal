[
  {
    "id": "d1-inject",
    "type": "inject",
    "z": "",
    "name": "Cada 5s",
    "props": [
      { "p": "payload" }
    ],
    "repeat": "5",
    "once": true,
    "onceDelay": 1,
    "topic": "",
    "x": 140,
    "y": 120,
    "wires": [["d1-fn"]]
  },
  {
    "id": "d1-fn",
    "type": "function",
    "z": "",
    "name": "Telemetry gateway payload",
    "func": "const ts = Date.now();\nconst temp = 24 + Math.random();\nconst hum = 60 + Math.random();\nmsg.payload = {\n  'node-1': [{ ts, values: { temperature: temp, humidity: hum } }]\n};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 360,
    "y": 120,
    "wires": [["d1-mqttout"]]
  },
  {
    "id": "d1-mqttout",
    "type": "mqtt out",
    "z": "",
    "name": "TB Gateway Telemetry",
    "topic": "v1/gateway/telemetry",
    "qos": "0",
    "retain": "",
    "respTopic": "",
    "contentType": "",
    "userProps": "",
    "correl": "",
    "expiry": "",
    "broker": "tb-broker",
    "x": 640,
    "y": 120,
    "wires": []
  },
  {
    "id": "tb-broker",
    "type": "mqtt-broker",
    "name": "ThingsBoard",
    "broker": "localhost",
    "port": "1883",
    "tls": "",
    "clientid": "",
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "sessionExpiry": "",
    "credentials": { "user": "YOUR_GATEWAY_TOKEN" }
  }
]
